name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Type check with mypy
      run: mypy server/
    
    - name: Security scan with bandit
      run: bandit -r server/
    
    - name: Check dependencies with safety
      run: safety check
    
    - name: Run tests
      env:
        REDIS_URL: redis://localhost:6379/15
        ZOHO_CLIENT_ID: test_client_id
        ZOHO_CLIENT_SECRET: test_client_secret
        ZOHO_REFRESH_TOKEN: test_refresh_token
        JWT_SECRET: test_jwt_secret_key_32_characters_min
        PORTAL_ID: test_portal_id
      run: |
        pytest -v --cov=server --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-security.txt
    
    - name: Run pip-audit
      run: pip-audit --format=json --output=pip-audit-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          pip-audit-report.json

  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t zoho-mcp-server:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm -e ENVIRONMENT=test zoho-mcp-server:latest python -c "import server; print('OK')"