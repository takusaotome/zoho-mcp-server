[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zoho-mcp-server"
version = "0.1.0"
description = "Zoho MCP Server for Model Context Protocol integration"
authors = [{name = "Development Team", email = "dev@company.com"}]
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "fastapi==0.109.0",
    "uvicorn[standard]==0.25.0",
    "httpx==0.25.2",
    "pydantic==2.5.3",
    "pydantic-settings==2.1.0",
    "redis==5.0.1",
    "pyjwt==2.8.0",
    "cryptography==41.0.7",
    "slowapi==0.1.9",
    "python-multipart==0.0.6",
    "babel==2.14.0"
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=server",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=90"
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests"
]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit security
]
ignore = ["E501", "B008", "S101"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "S106", "S311"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.black]
target-version = ['py312']
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["server", "tests"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["server"]
omit = ["tests/*", "venv/*", ".venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]